service: foodfusion
image: bhavyansh001/foodfusion

servers:
  web:
    hosts:
      - 167.71.252.26
    labels:
      traefik.http.routers.foodfusion.rule: Host(`foodfusion2.diversepixel.com`)
      traefik.http.routers.foodfusion_secure.entrypoints: websecure
      traefik.http.routers.foodfusion_secure.rule: Host(`foodfusion2.diversepixel.com`)
      traefik.http.routers.foodfusion_secure.tls: true
      traefik.http.routers.foodfusion_secure.tls.certresolver: letsencrypt
    options:
      network: "foodfusion_network"
  job:
    hosts:
      - 167.71.252.26
    cmd: bundle exec rake solid_queue:start
    options:
      network: "foodfusion_network"

registry:
  username: bhavyansh001
  password:
    - KAMAL_REGISTRY_PASSWORD

env:
  clear:
    DB_HOST: "foodfusion-db"
    REDIS_URL: "redis://foodfusion-redis:6379/0"
  secret:
    - POSTGRES_USER
    - POSTGRES_PASSWORD
    - POSTGRES_DB
    - SECRET_KEY_BASE
    - SMTP_PASSWORD

builder:
  args:
    RUBY_VERSION: 3.3.0
  remote:
    arch: amd64

accessories:
  db:
    image: postgres:16.0
    host: 167.71.252.26
    env:
      secret:
        - POSTGRES_USER
        - POSTGRES_PASSWORD
        - POSTGRES_DB
    files:
      - config/production.sql:/docker-entrypoint-initdb.d/setup.sql
    directories:
      - data:/var/lib/postgresql/data
    options:
      network: "foodfusion_network"
  redis:
    image: redis:7.0
    host: 167.71.252.26
    directories:
      - redis-data:/data
    options:
      network: "foodfusion_network"

traefik:
  options:
    publish:
      - "443:443"
    volume:
      - "/letsencrypt/acme.json:/letsencrypt/acme.json"
    network: "foodfusion_network"
  args:
    entryPoints.web.address: ":80"
    entryPoints.websecure.address: ":443"
    certificatesResolvers.letsencrypt.acme.email: "hi@foodfusion.diversepixel.com"
    certificatesResolvers.letsencrypt.acme.storage: "/letsencrypt/acme.json"
    certificatesResolvers.letsencrypt.acme.httpchallenge: true
    certificatesResolvers.letsencrypt.acme.httpchallenge.entrypoint: web